# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  workflow_dispatch:
  schedule:
    - cron: "47 14 * * 2"   # <=== Set to run at 14:47 on Tuesdays (avoiding 00:00 and top of the hour runs gives us a better chance for getting server time)

name: "Check Universe Packages"

permissions: read-all

jobs:
  list:
    name: "List Universe Packages"
    runs-on: ubuntu-latest
    outputs:
      pkgs: ${{ steps.gather.outputs.pkgs }}
    steps:
      - id: gather
        run: |
          {
            echo 'pkgs<<EOF'
            echo "$(curl -sSL https://hubverse-org.r-universe.dev/api/packages \
                  | jq -r '[.[] | {file: ._file, package: .Package}] | map(select(.package | startswith("hub") and . != "hubStyle"))')" 
            echo 'EOF' 
          } >> "$GITHUB_OUTPUT"
      - id: show-output
        run: |
          jq '.[]' <<< '${{ steps.gather.outputs.pkgs }}'
  fetch:
    needs: list
    name: "Fetch Universe Packages"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJSON(needs.list.outputs.pkgs) }}
    steps:
      - id: download
        run: |
          curl -fsSL -o pkg.zip "https://hubverse-org.r-universe.dev/api/snapshot/zip?types=src&packages=${{ matrix.pkg.package }}"
          mkdir -p ${{ runner.temp }}/package
          unzip -j pkg.zip src/contrib/${{ matrix.pkg.file }}

      - id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.pkg.package }}
          path: ${{ matrix.pkg.file }}

  R-CMD-check:
    timeout-minutes: 60
    needs: [list, fetch]
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.pkg.package }} | ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        pkg: ${{ fromJSON(needs.list.outputs.pkgs) }}
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,  r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - id: download-artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.pkg.package }}
          path: ${{ runner.temp }}
      - id: fetch-pkg
        run: |
          cd ${{ runner.temp }}
          file ${{ matrix.pkg.file }}
          # extract to working dir
          tar -xzvf ${{ matrix.pkg.file }} 
          # move package contents to working dir
          mv -v ${{ matrix.pkg.package }}/* ${{ github.workspace }}
          ls -l ${{ github.workspace }}

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'
